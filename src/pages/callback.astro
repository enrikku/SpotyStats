<html>
  <meta charset="UTF-8" />
  <body>
    <h1>Procesando autenticaci√≥n con Spotify...</h1>

    <script>
      import { encrypt, decrypt } from "../lib/crypto.js";

      const code = new URLSearchParams(window.location.search).get("code");

      async function run() {
        if (!code) {
          alert("No se pudo obtener el code de la autenticaci√≥n con Spotify.");
          window.location.href = "/";
          return;
        }

        const url = `/api/callback?code=${encodeURIComponent(code)}`;
        const passwd = import.meta.env.PUBLIC_CRYPT_PSSWD;

        try {
          const res = await fetch(url);
          const data = await res.json();

          const token = data.access_token;
          const expiresIn = data.expires_in || 3600;
          const expireDate = new Date(
            Date.now() + expiresIn * 1000
          ).toUTCString();

          // console.log("Obteniendo token de Spotify...");
          // console.log("Token:", data);

          //console.log("Encriptando token:");
          const encrypted = await encrypt(token, passwd);
          const encryptedStr = encodeURIComponent(JSON.stringify(encrypted));

          //console.log("üîê Token encriptado:", encryptedToken.ciphertext);

          //console.log("Desencriptando token...");
          //const decryptedToken = await decrypt(encryptedToken, passwd);
          //console.log("üîì Token desencriptado:", decryptedToken);

          // Guardar en cookie
          document.cookie =  `access_token=${encryptedStr}; expires=${expireDate}; path=/`;

          // Redirigir
          window.location.href = "/";
        } catch (err) {
          console.error("‚ùå Error al obtener token de Spotify", err);
          alert("Error al obtener token de Spotify.");
          window.location.href = "/";
        }
      }

      run();
    </script>
  </body>
</html>
